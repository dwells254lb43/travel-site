.row{
	/*clearfix is a fix to floating left and having 0 items in a div, messing up the layout.*/
	@mixin clearfix;
	

	&--t-padding{
		padding-top: 80px;
	}
/*On medium screens float the values left and create column layouts, on small screens this does not happen
so the two items just stack on top of eachother.*/

&__b-margin-until-large{
	margin-bottom: 1rem;
}
	@mixin atMedium{


		&__b-margin-until-medium{
			margin-bottom: 0rem;
		}
		&__medium-4{
			float: left;
			width: 33.33%;
		}

		&__medium-4--larger{
			width: 37%;
		}

		&__medium-8{
			float: left;
			width: 66.66%;
		}

		&__medium-6{
			float: left;
			width: 50%;
		}

		&__medium-8--smaller{
			width: 63%;
		}
	}

	@mixin atLarge{


		&__b-margin-until-large{
			margin-bottom: 0rem;
		}
		&__large-4{
			float: left;
			width: 33.33%;
		}

		&__large-4--larger{
			width: 37%;
		}

		&__large-8{
			float: left;
			width: 66.66%;
		}

		&__large-6{
			float: left;
			width: 50%;
		}

		&__large-8--smaller{
			width: 63%;
		}
	}
	&--gutters{
		margin-right: -65px;
	}
	/*creates a 65 px seperation between items in a column layout*/
	&--gutters > div{

		padding-right: 65px;
			
	}

	&--gutters-large{
		margin-right: -100px;
	}

	&--gutters-large > div{
		padding-right: 100px;
	}

	&--gutters-small{
		margin-right: -45px;
	}

	&--gutters-small > div{
		padding-right: 45px;
	}

	
	/*gutters gets rid of the excess right margin on the last most column, so that it is in line with the layout*/


	
/*Begin equal height rule*/

	&--equal-height-at-medium{
		@mixin atMedium{
			display: flex;
		}

		& > div {
			float: none;
			display: flex;
		}
	}

	&--equal-height-at-large{
		@mixin atLarge{
			display: flex;
		}

		& > div {
			float: none;
			display: flex;
		}
	}

}